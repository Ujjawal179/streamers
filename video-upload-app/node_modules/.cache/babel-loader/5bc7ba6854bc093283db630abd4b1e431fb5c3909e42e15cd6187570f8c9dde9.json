{"ast":null,"code":"var _jsxFileName = \"/Users/shivanshchauhan/Desktop/Work/MicroSAAS/backend/video-upload-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // You can add your custom styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleFileChange = event => {\n    setVideoFile(event.target.files[0]);\n  };\n  const uploadVideo = async () => {\n    if (!videoFile) {\n      alert('Please select a video file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', videoFile);\n    try {\n      // POST request to backend to handle Pinata upload\n      const response = await axios.post('http://localhost:3005/upload', formData);\n      const {\n        hash\n      } = response.data;\n      setMessage('Upload Successful! IPFS Hash: ' + hash);\n\n      // Post the IPFS hash to another API\n      await postHash(hash);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage('Error: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n  const postHash = async hash => {\n    try {\n      const response = await axios.post('http://localhost:3005/api/receive-hash', {\n        hash\n      });\n      if (response.status === 200) {\n        setMessage(prev => prev + '\\nHash posted to API successfully!');\n      } else {\n        throw new Error('Failed to send hash to API');\n      }\n    } catch (error) {\n      setMessage(prev => {\n        var _error$response2, _error$response2$data;\n        return prev + '\\nError posting hash to API: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Your Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadVideo,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"oMwQARwLKt9UxenZ9YIL0Z/9VNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","videoFile","setVideoFile","message","setMessage","handleFileChange","event","target","files","uploadVideo","alert","formData","FormData","append","response","post","hash","data","postHash","error","_error$response","_error$response$data","status","prev","Error","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/shivanshchauhan/Desktop/Work/MicroSAAS/backend/video-upload-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // You can add your custom styles here\n\nfunction App() {\n    const [videoFile, setVideoFile] = useState(null);\n    const [message, setMessage] = useState('');\n\n    const handleFileChange = (event) => {\n        setVideoFile(event.target.files[0]);\n    };\n\n    const uploadVideo = async () => {\n        if (!videoFile) {\n            alert('Please select a video file first.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('file', videoFile);\n\n        try {\n            // POST request to backend to handle Pinata upload\n            const response = await axios.post('http://localhost:3005/upload', formData);\n            const { hash } = response.data;\n            setMessage('Upload Successful! IPFS Hash: ' + hash);\n\n            // Post the IPFS hash to another API\n            await postHash(hash);\n        } catch (error) {\n            setMessage('Error: ' + (error.response?.data?.message || error.message));\n        }\n    };\n\n    const postHash = async (hash) => {\n        try {\n            const response = await axios.post('http://localhost:3005/api/receive-hash', {\n                hash,\n            });\n\n            if (response.status === 200) {\n                setMessage(prev => prev + '\\nHash posted to API successfully!');\n            } else {\n                throw new Error('Failed to send hash to API');\n            }\n        } catch (error) {\n            setMessage(prev => prev + '\\nError posting hash to API: ' + (error.response?.data?.message || error.message));\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Upload Your Video</h1>\n            <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\n            <button onClick={uploadVideo}>Upload</button>\n            <p>{message}</p>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}